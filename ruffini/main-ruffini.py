from ruffini import *

if __name__ == "__main__":
   p = Polynomial(7, 0, 2, 0, -1)
   q = Polynomial(-1,0,42)
   r = Polynomial(3.2, 15, 0, 1, 4, 2, 0)

   print("p :- {}\nq :- {}\nr :- {}".format(p,q,r))

   z = p+q+r
   print("z :- {}".format(z))

   print("Monomials of z:", z.monomials() )

   print("z-r :- {}".format(z-r))

   print('The polynomials generated by q×p are:')
   for p1 in p.monomials():
     print("  · {}".format(q<<p1))

   print('p·q :- {} \nq·p :- {}'.format(p*q, q*p))

   r = Polynomial(2,-5,-1,6).ruffini(Polynomial(1,1))
   print('2x³-5x²-x+6/x+1 :- {} with remainder :- {} '.format(r[0],r[1]))

   p1 = Polynomial(2,3,0,-4)
   p2 = Polynomial(1,1)
   print('2x³+3x²-4/x+1 :- {} with remainder :- {} '.format((p1/p2),p1%p2))

   print("Let's try some impossible operations")
   try:
     print("  · Can I do {}/{}? ".format(q,p), end='')
     q/p
   except TooHighOrderDivisorException as e:
     print(e)
   try:
     print("  · Can I do {}%{}? ".format(q,p), end='')
     q%p
   except TooHighOrderDivisorException as e:
     print(e)
   try:
     print("  · Can I do {}.ruffini({})? ".format(q,p), end='')
     q.ruffini(p)
   except TooHighOrderDivisorException as e:
     print(e)
